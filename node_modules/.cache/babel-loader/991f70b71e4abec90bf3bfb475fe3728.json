{"remainingRequest":"/home/starscream97/Documents/Instagram/insta/node_modules/babel-loader/lib/index.js!/home/starscream97/Documents/Instagram/insta/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/starscream97/Documents/Instagram/insta/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/starscream97/Documents/Instagram/insta/src/components/Navbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/starscream97/Documents/Instagram/insta/src/components/Navbar.vue","mtime":1553271748817},{"path":"/home/starscream97/Documents/Instagram/insta/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/starscream97/Documents/Instagram/insta/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/starscream97/Documents/Instagram/insta/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/starscream97/Documents/Instagram/insta/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/home/starscream97/Documents/Instagram/insta/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.split\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar axios = require('axios');\n\nexport default {\n  name: 'Navbar',\n  data: function data() {\n    return {\n      user: {},\n      searchTerm: '',\n      isLoggedIn: false,\n      notifications: [],\n      root_api: process.env.VUE_APP_ROOT_API,\n      notificationVisible: false,\n      newNotification: false\n    };\n  },\n  sockets: {\n    notificationReceived: function notificationReceived(data) {\n      this.newNotification = true;\n    }\n  },\n  computed: {\n    fetchNotifications: function fetchNotifications() {\n      var _this = this;\n\n      axios.get(\"\".concat(process.env.VUE_APP_ROOT_API, \"api/notification/\").concat(this.user.userId)).then(function (res) {\n        _this.notifications = res.data.data;\n      });\n    }\n  },\n  methods: {\n    searchDatabase: function searchDatabase() {\n      this.$router.push({\n        name: 'searchpage',\n        params: {\n          searchTerm: this.searchTerm\n        }\n      });\n      this.searchTerm = '';\n    },\n    showNotifications: function showNotifications() {\n      this.notificationVisible = !this.notificationVisible;\n      this.newNotification = false;\n    },\n    goToPost: function goToPost(postId) {\n      this.$router.push({\n        name: 'singlePost',\n        params: {\n          postId: postId\n        }\n      });\n    },\n    loginGoogle: function loginGoogle() {\n      var _this2 = this;\n\n      this.$gAuth.signIn().then(function (GoogleUser) {\n        var user = {\n          email: GoogleUser.w3.U3,\n          profileImage: GoogleUser.w3.Paa,\n          googleId: GoogleUser.El,\n          name: GoogleUser.w3.ig,\n          username: GoogleUser.w3.U3.split('@')[0]\n        };\n        axios.post(\"\".concat(process.env.VUE_APP_ROOT_API, \"api/user/signup\"), user).then(function (res) {\n          user.userId = res.data.data._id;\n          localStorage.setItem('user', _JSON$stringify(user));\n          _this2.user = user;\n\n          _this2.$store.commit('setUser', user);\n\n          _this2.isLoggedIn = true; // this.$socket.emit('newUser',{name:user.name,userId:user.userId});    \n\n          _this2.$socket.emit('newUser', {\n            userId: user.userId\n          }, function (data) {// if(!data)\n            // console.log(\"Username Already Exists\");\n            // console.log(data)\n          });\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    logoutGoogle: function logoutGoogle() {\n      var _this3 = this;\n\n      this.$gAuth.signOut().then(function () {\n        _this3.isLoggedIn = false;\n\n        _this3.$store.commit('logOut');\n      }).catch(function (error) {// things to do when sign-out fails\n      });\n    }\n  },\n  mounted: function mounted() {\n    if (JSON.parse(localStorage.getItem('user'))) {\n      this.user = JSON.parse(localStorage.getItem('user'));\n      this.isLoggedIn = true;\n      this.fetchNotifications;\n    }\n  },\n  watch: {\n    isLoggedIn: function isLoggedIn(newValue, oldValue) {\n      this.isLoggedIn = newValue;\n\n      if (this.isLoggedIn) {\n        this.user = JSON.parse(localStorage.getItem('user'));\n        this.fetchNotifications;\n      }\n    }\n  }\n};",{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <nav>\n        <!-- <div class=\"container navbar\"> -->\n            <header><router-link to=\"/\">Albedo</router-link></header>\n            <div class=\"search-form\">\n                <form action=\"\" @submit.prevent=\"searchDatabase()\">\n                    <input type=\"text\" placeholder=\"Search\" v-model=\"searchTerm\">\n                </form>\n            </div>\n            <div class=\"profile\">\n                <div class=\"links\">\n                    <router-link to=\"/discover\"><i class=\"fas fa-compass\"></i></router-link>\n                    <router-link to=\"/create\"><i class=\"fas fa-pen-square\"></i></router-link>\n                </div>\n                <div class=\"notifications\">\n                    <i class=\"fas fa-exclamation newNotificationIcon\" v-if=\"newNotification\"></i>\n                    <i class=\"fas fa-heart\" @click=\"showNotifications()\"  v-bind:class=\"{ showRed: notificationVisible }\"></i>\n                    <div class=\"notification-bar\" v-if=\"notifications\"   v-bind:class=\"{ showNotifications: notificationVisible }\">\n                            <div class=\"notification\" v-for=\"notification in notifications.slice(0,15)\" :key=\"notification._id\">\n                                <div v-if=\"notification.notificationType==='Comment'\"  @click=\"goToPost(notification.postId)\">{{notification.senderName}} commented on your post. <img :src=\"root_api + '/' + notification.pictureURL\"></div>\n                                \n                            </div>\n                    </div>\n                </div>\n                <div class=\"profileImage\"  v-if=\"isLoggedIn\">\n                    <img :src=\"user.profileImage\" alt=\"\">\n                </div>\n                <div class=\"profile-content\"  v-if=\"isLoggedIn\">\n                    <h5>{{user.name}}</h5>\n                    <h6>@{{user.username}}</h6>\n                </div>\n                <div class=\"login-button\">\n                    <a href=\"#\" @click.prevent=\"loginGoogle()\" v-if=\"!isLoggedIn\">Login</a>\n                    <a href=\"#\" @click.prevent=\"logoutGoogle()\" v-if=\"isLoggedIn\">Logout</a>\n                </div>\n            </div>\n            \n        <!-- </div> -->\n    </nav>\n</template>\n\n<script>\nconst axios=require('axios');\nexport default {\n    name:'Navbar',\n    data(){\n        return{\n            user:{},\n            searchTerm:'',\n            isLoggedIn:false,\n            notifications:[],\n            root_api:process.env.VUE_APP_ROOT_API,\n            notificationVisible:false,\n            newNotification:false\n        }\n    },\n    sockets:{\n        notificationReceived(data){\n            this.newNotification=true;\n        }\n    },\n    computed:{\n        fetchNotifications(){\n            axios.get(`${process.env.VUE_APP_ROOT_API}api/notification/${this.user.userId}`).then(res=>{\n                this.notifications=res.data.data;\n            })\n        }\n       \n    },\n    methods:{\n        searchDatabase(){\n            this.$router.push({name:'searchpage',params:{searchTerm:this.searchTerm}});\n            this.searchTerm=''\n            \n        },\n        showNotifications(){\n            this.notificationVisible=!this.notificationVisible\n            this.newNotification=false;\n        },  \n        goToPost(postId){\n            this.$router.push({name:'singlePost',params:{postId}});\n        },\n        loginGoogle(){\n            \n            this.$gAuth.signIn()\n            .then(GoogleUser => {\n                    let user={\n                        email:GoogleUser.w3.U3,\n                        profileImage:GoogleUser.w3.Paa,\n                        googleId:GoogleUser.El,\n                        name:GoogleUser.w3.ig,\n                        username:GoogleUser.w3.U3.split('@')[0]\n                    }  \n                    axios.post(`${process.env.VUE_APP_ROOT_API}api/user/signup`,user)\n                    .then(res=>{\n                        user.userId=res.data.data._id;\n                        localStorage.setItem('user',JSON.stringify(user));\n                        this.user=user;\n                        this.$store.commit('setUser',user);\n                        this.isLoggedIn=true;\n                        // this.$socket.emit('newUser',{name:user.name,userId:user.userId});    \n                        this.$socket.emit('newUser',{userId:user.userId,},function(data){\n                            // if(!data)\n                                // console.log(\"Username Already Exists\");\n                            // console.log(data)\n                        });\n                    }).catch(err=>{console.log(err)})                \n                \n            })\n            .catch(error  => {console.log(error)})\n        },\n        logoutGoogle(){\n            this.$gAuth.signOut()\n                .then(() => {\n                    this.isLoggedIn=false;\n                    this.$store.commit('logOut');\n                })\n                .catch(error  => {\n                // things to do when sign-out fails\n                })\n        }\n    },\n    mounted(){\n        if(JSON.parse(localStorage.getItem('user'))){\n            this.user=JSON.parse(localStorage.getItem('user'));\n            this.isLoggedIn=true;\n            this.fetchNotifications;\n        }\n    },\n    watch:{\n        isLoggedIn:function(newValue,oldValue){\n            this.isLoggedIn=newValue;\n            if(this.isLoggedIn){\n                this.user=JSON.parse(localStorage.getItem('user'));\n                this.fetchNotifications;\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .container{\n        max-width: 90%;\n        margin: 0 auto;\n    }\n    /* .navbar{\n        display: grid;\n        grid-template-columns: repeat(12,1fr);\n        grid-gap: 1rem;\n    } */\n    /* header{\n        grid-column: span 2;\n    } */\n    \n    \n   \n   \n    \n    /* .search-form{\n        grid-column: span 4;\n    }\n    .search-form input{\n        width: 100%;\n    }\n    .links{\n        grid-column: span 2;\n        display: flex;\n        justify-content: space-between;\n\n    }\n    .login-button{\n        grid-column: span 2;\n\n    }\n    .profile{\n        grid-column: span 2;\n        display: flex;\n    }\n    .profileImage{\n        border-radius: 50%;\n        width: 60px;\n        height: 60px;\n        overflow: hidden;\n    }\n    .profileImage img{\n        width: 100%;\n    } */\n</style>\n\n"],"sourceRoot":"src/components"}]}