{"remainingRequest":"/home/starscream97/Documents/Instagram/insta/node_modules/babel-loader/lib/index.js!/home/starscream97/Documents/Instagram/insta/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/starscream97/Documents/Instagram/insta/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/starscream97/Documents/Instagram/insta/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/starscream97/Documents/Instagram/insta/src/views/Home.vue","mtime":1553267406786},{"path":"/home/starscream97/Documents/Instagram/insta/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/starscream97/Documents/Instagram/insta/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/starscream97/Documents/Instagram/insta/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/starscream97/Documents/Instagram/insta/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport Sidebar from '@/components/Sidebar';\nimport Vue from 'vue';\nexport default {\n  name: \"home\",\n  components: {\n    Sidebar: Sidebar\n  },\n  data: function data() {\n    return {\n      isLoaded: false,\n      newPostsAvailable: false,\n      perPage: 4,\n      page: 1,\n      totalPages: 1,\n      posts: [],\n      root_url: process.env.VUE_APP_ROOT_API,\n      newcomment: '',\n      user: JSON.parse(localStorage.getItem('user')),\n      morePostsAvailable: true\n    };\n  },\n  sockets: {\n    someonePosted: function someonePosted(data) {\n      this.newPostsAvailable = true;\n      this.posts.unshift(data);\n    }\n  },\n  methods: {\n    fetchAllPosts: function fetchAllPosts() {\n      var _this = this;\n\n      axios.get(\"\".concat(process.env.VUE_APP_ROOT_API, \"/api/post?perPage=\").concat(this.perPage, \"&page=\").concat(this.page)).then(function (res) {\n        _this.posts = res.data.data.docs;\n        _this.totalPages = res.data.data.pages; // console.log(this.totalPages)\n\n        _this.isLoaded = true;\n      });\n    },\n    loadMorePosts: function loadMorePosts() {\n      var _this2 = this;\n\n      this.page++;\n\n      if (this.page <= this.totalPages) {\n        axios.get(\"\".concat(process.env.VUE_APP_ROOT_API, \"/api/post?perPage=\").concat(this.perPage, \"&page=\").concat(this.page)).then(function (res) {\n          // console.log(res.data.data.docs);\n          res.data.data.docs.forEach(function (post) {\n            _this2.posts.push(post);\n          });\n        });\n      }\n\n      if (this.page == this.totalPages) {\n        this.morePostsAvailable = false;\n      }\n    },\n    goToPhoto: function goToPhoto(photoURL) {\n      window.open(\"\".concat(this.root_url, \"/\").concat(photoURL), \"_blank\");\n    },\n    goToUserProfile: function goToUserProfile(username) {\n      this.$router.push({\n        name: 'userprofile',\n        params: {\n          username: username\n        }\n      });\n    },\n    viewPost: function viewPost(postId) {\n      this.$router.push({\n        name: 'singlePost',\n        params: {\n          postId: postId\n        }\n      });\n    },\n    likePost: function likePost(postId) {\n      // const userId=JSON.parse(localStorage.getItem('user')).userId;\n      axios.post(\"\".concat(process.env.VUE_APP_ROOT_API, \"/api/post/like\"), {\n        userId: this.userId,\n        postId: postId\n      });\n    },\n    commentOnPost: function commentOnPost(postIndex, postId, receiverId, pictureURL) {\n      var _this3 = this;\n\n      // this.posts[postIndex].comments.push(this.comment);\n      axios.post(\"\".concat(process.env.VUE_APP_ROOT_API, \"/api/comment/comment\"), {\n        userId: this.user.userId,\n        comment: this.newcomment,\n        commenterName: this.user.name,\n        postId: postId\n      }).then(function (res) {\n        _this3.newcomment = '';\n\n        _this3.fetchAllPosts();\n\n        _this3.$forceUpdate();\n      });\n      this.$socket.emit('notification', {\n        postId: postId,\n        comment: this.newcomment,\n        notificationType: \"Comment\",\n        to: receiverId,\n        pictureURL: pictureURL,\n        userId: this.$store.state.user.userId,\n        username: this.$store.state.user.name\n      });\n    }\n  },\n  created: function created() {\n    this.fetchAllPosts();\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.userId !== '') {\n      this.$store.commit('setUser', user);\n      this.$socket.emit('newUser', {\n        userId: user.userId\n      }, function (data) {});\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"home container\">\n    <div class=\"posts\" v-if=\"isLoaded\">\n    <div class=\"new-post-alert\" v-if=\"newPostsAvailable\">New Posts</div>\n      \n      <div class=\"post\" v-for=\"(post,index) in posts\" :key=\"post._id\">\n        <div class=\"post-author\">\n          <h5 @click=\"goToUserProfile(post.user.username)\">{{post.user.name}}</h5>\n          <h6>{{post.user.username}}</h6>\n        </div>\n        <div class=\"post-image\">\n          <img :src=\"root_url + '/' + post.pictureURL\" alt=\"\" @click=\"viewPost(post._id)\">\n        </div>\n        <div class=\"post-body\">\n            <div class=\"react-buttons\">\n              <div class=\"like\"><i class=\"fas fa-heart\" @click.prevent=\"likePost(post._id)\"></i></div>\n              <div class=\"download\" @click.prevent=\"goToPhoto(post.pictureURL)\"><i class=\"fas fa-arrow-alt-circle-down\"></i></div>\n            </div>\n            <div class=\"post-description\">\n              <h4>{{post.title}}</h4>\n              <h6>{{post.likes}} likes</h6>\n            </div>\n            \n            <div class=\"comments\">\n              <div class=\"comment\" v-for=\"comment in post.comments.slice(0,4)\" :key=\"comment._id\">\n                <h5 class=\"commenter-name\">{{comment.commenterName}}</h5>\n                <h6 class=\"comment-text\">{{comment.comment}}</h6>\n              </div>\n            </div>\n            <div class=\"comment-form\">\n              <form action=\"\" @submit.prevent=\"commentOnPost(index,post._id,post.user._id,post.pictureURL)\">\n                <input type=\"text\" placeholder=\"Add a comment\" v-model=\"newcomment\">\n              </form>\n            </div>\n        </div>\n      </div>\n      <button v-if=\"morePostsAvailable\" @click.prevent=\"loadMorePosts()\" class=\"loadMorePostBtn\">Load More Post</button>\n    </div>\n    <div class=\"sidebar\">\n      <Sidebar />\n    </div>\n    \n  </div>\n</template>\n\n<script>\n\nimport axios from 'axios'\nimport Sidebar from '@/components/Sidebar'\nimport Vue from 'vue'\n\nexport default {\n  name: \"home\",\n  components:{\n    Sidebar\n  },\n  data(){\n    return{\n      isLoaded:false,\n      newPostsAvailable:false,\n      perPage:4,\n      page:1,\n      totalPages:1,\n      posts:[],\n      root_url:process.env.VUE_APP_ROOT_API,\n      newcomment:'',\n      user:JSON.parse(localStorage.getItem('user')),\n      morePostsAvailable:true\n    }\n  },\n sockets:{\n   someonePosted(data){\n     this.newPostsAvailable=true;\n     this.posts.unshift(data);\n   }\n },\n  methods:{\n    fetchAllPosts(){\n      axios.get(`${process.env.VUE_APP_ROOT_API}/api/post?perPage=${this.perPage}&page=${this.page}`).then(res=>{\n        this.posts=res.data.data.docs;\n        this.totalPages=res.data.data.pages\n        // console.log(this.totalPages)\n        this.isLoaded=true;\n      })\n    },\n    loadMorePosts(){\n      this.page++;\n      if(this.page<=this.totalPages){\n          axios.get(`${process.env.VUE_APP_ROOT_API}/api/post?perPage=${this.perPage}&page=${this.page}`).then(res=>{\n            // console.log(res.data.data.docs);\n            res.data.data.docs.forEach(post=>{\n              this.posts.push(post);\n            })\n          })       \n      }\n      if(this.page==this.totalPages){\n        this.morePostsAvailable=false;\n      }\n      \n    },\n    goToPhoto(photoURL){\n      window.open(`${this.root_url}/${photoURL}`, \"_blank\");   \n    },\n    goToUserProfile(username){\n      this.$router.push({name:'userprofile',params:{username}});\n    },\n    viewPost(postId){\n      this.$router.push({name:'singlePost',params:{postId}});\n    },\n  \n    likePost(postId){\n      // const userId=JSON.parse(localStorage.getItem('user')).userId;\n      axios.post(`${process.env.VUE_APP_ROOT_API}/api/post/like`,{\n        userId:this.userId,\n        postId\n      })\n    },\n    commentOnPost(postIndex,postId,receiverId,pictureURL){\n      // this.posts[postIndex].comments.push(this.comment);\n      axios.post(`${process.env.VUE_APP_ROOT_API}/api/comment/comment`,{\n        userId:this.user.userId,\n        comment:this.newcomment,\n        commenterName:this.user.name,\n        postId\n      }).then(res=>{\n        this.newcomment=''\n        this.fetchAllPosts();\n        this.$forceUpdate();\n      })\n      this.$socket.emit('notification',{postId,comment:this.newcomment,notificationType:\"Comment\",to:receiverId,pictureURL,userId:this.$store.state.user.userId,username:this.$store.state.user.name});      \n    }\n  },\n  created(){\n    this.fetchAllPosts();\n    const user=JSON.parse(localStorage.getItem('user'));\n    if(user && user.userId!==''){\n        this.$store.commit('setUser',user);\n        this.$socket.emit('newUser',{userId:user.userId,},function(data){\n        });\n    }\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}