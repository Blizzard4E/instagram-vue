{"remainingRequest":"/home/starscream97/.local/share/Trash/files/insta/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/starscream97/.local/share/Trash/files/insta/src/components/Navbar.vue?vue&type=style&index=0&id=596f603f&scoped=true&lang=css&","dependencies":[{"path":"/home/starscream97/.local/share/Trash/files/insta/src/components/Navbar.vue","mtime":1553240828729},{"path":"/home/starscream97/.local/share/Trash/files/insta/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/starscream97/.local/share/Trash/files/insta/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/starscream97/.local/share/Trash/files/insta/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/starscream97/.local/share/Trash/files/insta/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/starscream97/.local/share/Trash/files/insta/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container{\n    max-width: 90%;\n    margin: 0 auto;\n}\n/* .navbar{\n    display: grid;\n    grid-template-columns: repeat(12,1fr);\n    grid-gap: 1rem;\n} */\n/* header{\n    grid-column: span 2;\n} */\n\n\n\n\n\n/* .search-form{\n    grid-column: span 4;\n}\n.search-form input{\n    width: 100%;\n}\n.links{\n    grid-column: span 2;\n    display: flex;\n    justify-content: space-between;\n\n}\n.login-button{\n    grid-column: span 2;\n\n}\n.profile{\n    grid-column: span 2;\n    display: flex;\n}\n.profileImage{\n    border-radius: 50%;\n    width: 60px;\n    height: 60px;\n    overflow: hidden;\n}\n.profileImage img{\n    width: 100%;\n} */\n",{"version":3,"sources":["Navbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Navbar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <nav>\n        <!-- <div class=\"container navbar\"> -->\n            <header><router-link to=\"/\">Albedo</router-link></header>\n            <div class=\"search-form\">\n                <form action=\"\" @submit.prevent=\"searchDatabase()\">\n                    <input type=\"text\" placeholder=\"Search\" v-model=\"searchTerm\">\n                </form>\n            </div>\n            <div class=\"profile\">\n                <div class=\"links\">\n                    <router-link to=\"/discover\"><i class=\"fas fa-compass\"></i></router-link>\n                    <router-link to=\"/create\"><i class=\"fas fa-pen-square\"></i></router-link>\n                </div>\n                <div class=\"notifications\">\n                    <i class=\"fas fa-exclamation newNotificationIcon\" v-if=\"newNotification\"></i>\n                    <i class=\"fas fa-heart\" @click=\"showNotifications()\"  v-bind:class=\"{ showRed: notificationVisible }\"></i>\n                    <div class=\"notification-bar\"   v-bind:class=\"{ showNotifications: notificationVisible }\">\n                            <div class=\"notification\" v-for=\"notification in notifications.slice(0,15)\" :key=\"notification._id\">\n                                <div v-if=\"notification.notificationType==='Comment'\"  @click=\"goToPost(notification.postId)\">{{notification.senderName}} commented on your post. <img :src=\"root_api + '/' + notification.pictureURL\"></div>\n                                \n                            </div>\n                    </div>\n                </div>\n                <div class=\"profileImage\"  v-if=\"isLoggedIn\">\n                    <img :src=\"user.profileImage\" alt=\"\">\n                </div>\n                <div class=\"profile-content\"  v-if=\"isLoggedIn\">\n                    <h5>{{user.name}}</h5>\n                    <h6>@{{user.username}}</h6>\n                </div>\n                <div class=\"login-button\">\n                    <a href=\"#\" @click.prevent=\"loginGoogle()\" v-if=\"!isLoggedIn\">Login</a>\n                    <a href=\"#\" @click.prevent=\"logoutGoogle()\" v-if=\"isLoggedIn\">Logout</a>\n                </div>\n            </div>\n            \n        <!-- </div> -->\n    </nav>\n</template>\n\n<script>\n\nexport default {\n    name:'Navbar',\n    data(){\n        return{\n            user:{},\n            searchTerm:'',\n            isLoggedIn:false,\n            notifications:[],\n            root_api:process.env.VUE_APP_ROOT_API,\n            notificationVisible:false,\n            newNotification:false\n        }\n    },\n    sockets:{\n        notificationReceived(data){\n            this.newNotification=true;\n        }\n    },\n    computed:{\n        fetchNotifications(){\n            axios.get(`${process.env.VUE_APP_ROOT_API}/api/notification/${this.user.userId}`).then(res=>{\n                this.notifications=res.data.data;\n            })\n        }\n       \n    },\n    methods:{\n        searchDatabase(){\n            this.$router.push({name:'searchpage',params:{searchTerm:this.searchTerm}});\n            this.searchTerm=''\n            \n        },\n        showNotifications(){\n            this.notificationVisible=!this.notificationVisible\n            this.newNotification=false;\n        },  \n        goToPost(postId){\n            this.$router.push({name:'singlePost',params:{postId}});\n        },\n        loginGoogle(){\n            \n            this.$gAuth.signIn()\n            .then(GoogleUser => {\n                    let user={\n                        email:GoogleUser.w3.U3,\n                        profileImage:GoogleUser.w3.Paa,\n                        googleId:GoogleUser.El,\n                        name:GoogleUser.w3.ig,\n                        username:GoogleUser.w3.U3.split('@')[0]\n                    }  \n                    axios.post(`${process.env.VUE_APP_ROOT_API}/api/user/signup`,user)\n                    .then(res=>{\n                        user.userId=res.data.data._id;\n                        localStorage.setItem('user',JSON.stringify(user));\n                        this.user=user;\n                        this.$store.commit('setUser',user);\n                        this.isLoggedIn=true;\n                        // this.$socket.emit('newUser',{name:user.name,userId:user.userId});    \n                        this.$socket.emit('newUser',{userId:user.userId,},function(data){\n                            if(!data)\n                                console.log(\"Username Already Exists\");\n                            console.log(data)\n                        });\n                    }).catch(err=>{console.log(err)})                \n                \n            })\n            .catch(error  => {console.log(error)})\n        },\n        logoutGoogle(){\n            this.$gAuth.signOut()\n                .then(() => {\n                    this.isLoggedIn=false;\n                    this.$store.commit('logOut');\n                })\n                .catch(error  => {\n                // things to do when sign-out fails\n                })\n        }\n    },\n    mounted(){\n        if(JSON.parse(localStorage.getItem('user'))){\n            this.user=JSON.parse(localStorage.getItem('user'));\n            this.isLoggedIn=true;\n            this.fetchNotifications;\n        }\n    },\n    watch:{\n        isLoggedIn:function(newValue,oldValue){\n            this.isLoggedIn=newValue;\n            if(this.isLoggedIn){\n                this.user=JSON.parse(localStorage.getItem('user'));\n                this.fetchNotifications;\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .container{\n        max-width: 90%;\n        margin: 0 auto;\n    }\n    /* .navbar{\n        display: grid;\n        grid-template-columns: repeat(12,1fr);\n        grid-gap: 1rem;\n    } */\n    /* header{\n        grid-column: span 2;\n    } */\n    \n    \n   \n   \n    \n    /* .search-form{\n        grid-column: span 4;\n    }\n    .search-form input{\n        width: 100%;\n    }\n    .links{\n        grid-column: span 2;\n        display: flex;\n        justify-content: space-between;\n\n    }\n    .login-button{\n        grid-column: span 2;\n\n    }\n    .profile{\n        grid-column: span 2;\n        display: flex;\n    }\n    .profileImage{\n        border-radius: 50%;\n        width: 60px;\n        height: 60px;\n        overflow: hidden;\n    }\n    .profileImage img{\n        width: 100%;\n    } */\n</style>\n\n"]}]}